@model IEnumerable<WebApp.Models.Movies.Movie>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Homepage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Overview)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Popularity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Revenue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Runtime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tagline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VoteAverage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VoteCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Budget)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Homepage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Overview)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Popularity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Revenue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Runtime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MovieStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tagline)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VoteAverage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VoteCount)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.MovieId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.MovieId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.MovieId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav>
    <ul class="pagination">

        @{
            var currentPage = (int)ViewData["CurrentPage"];
            var totalPages = (int)ViewData["TotalPages"];
        }
        
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = 1 })">« First</a>
            </li>
        }
        
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">‹ Prev</a>
            </li>
        }
        
        @for (int i = 1; i <= totalPages; i++)
        {
            if (i == 1 || i == totalPages || (i >= currentPage - 2 && i <= currentPage + 2))
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
            else if (i == currentPage - 3 || i == currentPage + 3)
            {
                <li class="page-item">
                    <span class="page-link">...</span>
                </li>
            }
        }
        
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Next ›</a>
            </li>
        }
        
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = totalPages })">Last »</a>
            </li>
        }
    </ul>
</nav>
